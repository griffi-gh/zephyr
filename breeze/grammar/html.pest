WHITESPACE = _{ WHITE_SPACE+ }
COMMENT = _{ "<!--" ~ (!"-->" ~ ANY)* ~ "-->" }

char = _{ ASCII_ALPHANUMERIC | "_" | "-" }

ident = @{ char+ }
_tag_end = !{ "/"? ~ ">" }
//TODO escape seq
value_proper = @{ PUSH("\"" | "\'") ~ (("\\" ~ ANY) | (!PEEK ~ ANY))* ~ POP }
value_naked = @{ (!(WHITE_SPACE | _tag_end) ~ ANY)+ }
value = _{ value_proper | value_naked }

attribute = { ident ~ ("=" ~ value)? }
attributes = { attribute* }

//This might be slow?
match_tag = !{ "<" ~ (("/" ~ PEEK) | ident) ~ attributes ~ "/"? ~ ">" }

text_node = @{ (!match_tag ~ ANY)+ ~ text_node? } //is recursion neeeded?
//raw_text_node = @{ (!("<" ~ "/" ~ PEEK ~ attributes ~ "/"? ~ ">") ~ ANY)* }

// Nodes which do not require closing tags
void_tag_name = _{
  ^"area" | ^"base" | ^"br" | ^"col" | ^"command" |
  ^"embed" | ^"hr" | ^"img" | ^"input" | ^"keygen" |
  ^"link" | ^"meta" | ^"param" | ^"source" | ^"track" | ^"wbr"
}
void_tag = {
  ("<" ~ void_tag_name ~ attributes ~ "/"? ~ ">") |
  ("<" ~ ident ~ attributes ~ "/" ~ ">")
}

opening_tag = { "<" ~ PUSH(ident) ~ attributes ~ ">" }
closing_tag = { "<" ~ "/" ~ POP ~ ">" }
full_tag = { opening_tag ~ tree ~ closing_tag }

node = { void_tag | full_tag | text_node }

tree = { node* }
tree_toplevel = _{ PUSH("") ~ tree ~ POP }

preamble = { ("<" ~ "!" ~ ^"DOCTYPE" ~ ^"html" ~ ">")? }

dom = { SOI ~ preamble ~ tree_toplevel ~ EOI }
